openapi: 3.0.3
info:
  title: Turnierverwaltung
  version: 0.1.0
paths:
  /ping:
    get:
      description: Ping Server
      responses:
        200:
          description: Pong
  /tournaments:
    get:
      description: List all tournaments
      tags:
        - "Tournaments"
      responses:
        200:
          description: ""
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TournamentWithId"
    put:
      description: Add a new tournament
      tags: 
        - "Tournaments"
      requestBody:
        description: "Properties of the tournament"
        required: true
        content: 
          "application/json":
            schema:
              $ref: "#/components/schemas/Tournament"
      responses: 
        201:
          description: "The tournament has been created"
        400:
          description: "The request contained invalid content"

  /tournaments/{tournamentId}:
    get: 
      description: Get a Tournament
      tags: 
        - "Tournaments"
      parameters:
        - in: path
          name: tournamentId
          schema:
            type: integer 
          required: true 
      responses:
        200:
          description: ""
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/TournamentDetail"
    patch:
      description: Update a Tournament
      tags: 
        - "Tournaments"
      parameters:
        - in: path
          name: tournamentId
          schema:
            type: integer 
          required: true 
      requestBody:
        description: "Properties of the tournament that should be updated"
        required: true
        content: 
          "application/json":
            schema:
              $ref: "#/components/schemas/Tournament"
      responses: 
        200:
          description: "The tournament has been updated"
        400:
          description: "The request contained invalid content"

tags:
  - name: Tournaments

servers:
  - url: "http://localhost:8080"

components:
  schemas:
    Tournament:
      type: object
      properties:
        name:
          type: string
    TournamentWithId:
      allOf: 
        - $ref: "#/components/schemas/Tournament"
        - type: object
          properties:
            tournamentId:
              type: integer
    TournamentDetail:
      type: object
      properties:
        tournamentId:
          type: integer
        name:
          type: string
        participants:
          type: array
          items:
            $ref: "#/components/schemas/Participant"
    Participant:
      type: object
      properties:
        participantId:
          type: integer
        name:
          type: string
        club:
          type: string